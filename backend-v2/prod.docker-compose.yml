version: '3.8'

services:
  go-app-1:
    build:
      context: .
      dockerfile: prod.Dockerfile
    container_name: go-app-1
    env_file:
      - .env.prod
    environment:
      - APP_ENV=production
      - SERVER_NAME=go-app-1
    expose:
      - '8080'
    networks:
      - monitoring

  go-app-2:
    build:
      context: .
      dockerfile: prod.Dockerfile
    container_name: go-app-2
    env_file:
      - .env.prod
    environment:
      - APP_ENV=production
      - SERVER_NAME=go-app-2
    expose:
      - '8080'
    networks:
      - monitoring

  go-app-3:
    build:
      context: .
      dockerfile: prod.Dockerfile
    container_name: go-app-3
    env_file:
      - .env.prod
    environment:
      - APP_ENV=production
      - SERVER_NAME=go-app-3
    expose:
      - '8080'
    networks:
      - monitoring

  go-app-4:
    build:
      context: .
      dockerfile: prod.Dockerfile
    container_name: go-app-4
    env_file:
      - .env.prod
    environment:
      - APP_ENV=production
      - SERVER_NAME=go-app-4
    expose:
      - '8080'
    networks:
      - monitoring

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - go-app-1
      - go-app-2
      - go-app-3
      - go-app-4
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=30d'
    ports:
      - '9090:9090'
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_LOG_LEVEL=warn
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/config/config.yml
    volumes:
      - ./loki-config.yml:/etc/loki/config/config.yml
      - loki_data:/loki
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yml:/etc/promtail/config.yml
    networks:
      - monitoring

volumes:
  grafana_data:
  loki_data:

networks:
  monitoring:
    driver: bridge
